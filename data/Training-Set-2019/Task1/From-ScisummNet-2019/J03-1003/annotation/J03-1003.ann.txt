Citance Number: 1 | Reference Article:  J03-1003.txt | Citing Article:  C04-1171.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>Identifying sets of objects originally followed the incremental algorithm (Dale and Reiter 1995), as in (Bateman 1999), (Stone 2000) and (Krahmer et al 2003), with limited coverage, since only few attributes typically apply to all intended referents and to none of the potential distractors.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>The generation of referring expressions is one of the most common tasks in natural language generation and has been addressed by many researchers in the past two decades, including Appelt (1985), Reiter (1990), Dale and Haddock (1991), Dale (1992), Dale and Reiter (1995), Horacek (1997), Stone and Webber (1998), Krahmer and Theune (1998, 2002), Bateman (1999), and van Deemter (2000, 2002).</S><S sid = NA ssid = NA>One of these is the full brevity algorithm (originally due to Dale 1992).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 2 | Reference Article:  J03-1003.txt | Citing Article:  W08-1138.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>For the first step, attribute selection, we use a version of the Graph-based REG algorithm of Krahmer et al (2003).</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>In particular, we are not forced to say that values of the attribute type are always cheaper than values of the attribute color.</S><S sid = NA ssid = NA>Graph-Based Generation Of Referring Expressions</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 3 | Reference Article:  J03-1003.txt | Citing Article:  W08-1138.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>(in line with the human preference for basic level values; cf. Krahmer et al 2003.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>According to Dale and Reiter (1995) and Reiter (1990), human speakers have a general preference for basic level values and move to more specific (subsumed) values only if these are more informative.</S><S sid = NA ssid = NA>For a given attribute, the basic level edges should be assigned the lowest costs, and those farthest away from the basic level edge should have the highest costs.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 4 | Reference Article:  J03-1003.txt | Citing Article:  W06-1410.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>We are currently exploring whether Krahmer et als (2003) graph-based approach to GRE is able to provide a better coverage of the data: this algorithm provides the ability to make use of different search strategies and weighting mechanisms when adding properties to a description, and such a mechanism might be used, for example, to counterbalance the Relational Algorithm's heavy bias towards the relations in this domain.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>We propose to formalize a scene (i.e., a domain of objects and their properties and relations) as a labeled directed graph and describe the content selection problem (which properties and relations to include in a description for an object?) as a subgraph construction problem.</S><S sid = NA ssid = NA>(2) The use of cost functions allows us to model different search methods, each restricting the search space in its own way.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 5 | Reference Article:  J03-1003.txt | Citing Article:  W06-1410.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>The major exceptions here may be (a) van Deemter's (2002) algorithm for sets; recall that we excluded from the human data used here 16 references that involved sets; and, as noted above, (b) Krahmer et als (2003) graph-based approach to GRE, which may perform better than the Relational Algorithm on descriptions using relations.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>Krahmer and Theune (2002) (see also Theune [2000]) describe an extension of the incremental algorithm that allows for relational descriptions.</S><S sid = NA ssid = NA>In addition, many algorithms still have difficulties with the generation of relational descriptions (descriptions that include references to other objects to single out the target object from its distractors).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 6 | Reference Article:  J03-1003.txt | Citing Article:  W05-1608.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>They distinguish three types of preciseness, i.e. precise, imprecise, or very imprecise pointing, and integrate pointing into the graph-based algorithm proposed by [Krahmer et al, 2003].</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>It is worth pointing out that there are various alternatives to full subgraph isomorphism that have a lower complexity.</S><S sid = NA ssid = NA>Of course, one could argue that in such cases objects should be distinguished using other means (e.g., by pointing).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 7 | Reference Article:  J03-1003.txt | Citing Article:  W10-4210.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>Algorithms for the generation of referring expressions commonly use this as a starting point, proposing that properties are organized in some linear order (Dale and Reiter, 1995) or weighted order (Krahmer et al, 2003) as input.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>In what is probably the key reference on the topic, Dale and Reiter (1995) describe and discuss a number of algorithms for the generation of referring expressions.</S><S sid = NA ssid = NA>Graph-Based Generation Of Referring Expressions</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 8 | Reference Article:  J03-1003.txt | Citing Article:  W10-4210.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>Similarly, one of the strengths of the Graph-Based Algorithm (Krahmer et al, 2003) is its ability to generate expressions that involve relations between objects, and these include spatial ones (next to, on top of, etc.).</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>For instance, the generation of relational expressions (i.e., referring expressions that include references to other objects) is enhanced by the fact that both properties and relations are formalized in the same way, namely, as edges in a graph.</S><S sid = NA ssid = NA>Graph-Based Generation Of Referring Expressions</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 9 | Reference Article:  J03-1003.txt | Citing Article:  P10-1159.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>In addition, we plan to experiment with assigning costs to planning operators in a metric planning problem (Hoffmann, 2002) in order to model the cognitive cost of an RE (Krahmer et al, 2003) and compute minimal-cost instruction sequences.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>Thus, for each v E VH and for each e E EH: cost(v) = cost(e) = 1.</S><S sid = NA ssid = NA>Instead of assigning costs to attributes, we can assign costs to values of attributes.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 10 | Reference Article:  J03-1003.txt | Citing Article:  W06-1413.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>(Krahmer et al, 2003) describe an approach to GRE in which a cost function guides search for a suitable description, and show that some existing GRE algorithms fit into this framework.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>In addition, the user has the possibility of specifying the cost function in whatever way he or she sees fit.</S><S sid = NA ssid = NA>(2) The use of cost functions allows us to model different search methods, each restricting the search space in its own way.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 11 | Reference Article:  J03-1003.txt | Citing Article:  D11-1107.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA></S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>Thanks are also due to Paul Piwek, MariÂ¨et Theune, Ielka van der Sluis, and the anonymous reviewers for helpful comments on an earlier version of this article.</S><S sid = NA ssid = NA>For this purpose we shall use cost functions.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 12 | Reference Article:  J03-1003.txt | Citing Article:  W05-1613.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>Recent work has formalised NLG algorithms for referring expression generation in terms of algorithms for finding an appropriate subgraph of a graph representing the domain knowledge [Krahmer et al, 2003].</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>The problem of finding a referring expression for an object is treated as finding a subgraph of the scene graph that is isomorphic to the intended referent but not to any other object.</S><S sid = NA ssid = NA>It is unclear how such statistical work on generation can be combined with older, rule-based work such as the algorithms just discussed.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 13 | Reference Article:  J03-1003.txt | Citing Article:  P10-2011.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>The Graph based algorithm (Krahmer et al, 2003), for example, searches for the cheapest description for a target, and distinguishes cheap attributes (such as color) from more expensive ones (orientation).</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>In sum: The list of preferred attributes for our example domain would be ( type, color, size ).</S><S sid = NA ssid = NA>If that does not suffice, first absolute attributes like color are tried, followed by relative ones such as size.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 14 | Reference Article:  J03-1003.txt | Citing Article:  W05-1626.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>The use of vertex facts indicates that the representation is inspired by the Graph approach to referring expression generation [Krahmer et al, 2003].</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>Graph-Based Generation Of Referring Expressions</S><S sid = NA ssid = NA>In this article, we present a general, graph-theoretic approach to the generation of referring expressions.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 15 | Reference Article:  J03-1003.txt | Citing Article:  W09-0630.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>We use the Graph-based algorithm of Krahmer et al (2003) for attribute selection.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>In particular, we are not forced to say that values of the attribute type are always cheaper than values of the attribute color.</S><S sid = NA ssid = NA>Graph-Based Generation Of Referring Expressions</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 16 | Reference Article:  J03-1003.txt | Citing Article:  W10-4221.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>For attribute selection, we use the graph-based algorithm of Krahmer et al (2003), one of the highest scoring attribute selection methods in the TUNA 2008 Challenge (Gatt et al (2008), table 11).</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>In particular, we are not forced to say that values of the attribute type are always cheaper than values of the attribute color.</S><S sid = NA ssid = NA>For a given attribute, the basic level edges should be assigned the lowest costs, and those farthest away from the basic level edge should have the highest costs.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 17 | Reference Article:  J03-1003.txt | Citing Article:  C04-1096.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>Although Krahmer et al claim that their method can handle n-ary relations (Krahmer et al, 2003), they provide node tails.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>Moreover, the approach to relations proposed here is fully general: It applies to all n-ary relations, not just binary ones.</S><S sid = NA ssid = NA>Moreover, the approach is fully general and applies to n-ary relations (and relation/property combinations) as well.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 18 | Reference Article:  J03-1003.txt | Citing Article:  C04-1096.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>A possible direction would be to enhance the algorithm proposed by Krahmer et al (Krahmer et al., 2003).</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>For example, Bauckhage et al. (1999) describe an assembly system in which computer vision is used to convert a workspace with various building blocks into a labeled directed scene graph.</S><S sid = NA ssid = NA>First, we assign salience weights to the vertices in the scene graph using the salience weights definition proposed by Krahmer and Theune.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 19 | Reference Article:  J03-1003.txt | Citing Article:  W12-1503.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>The graph-based REG algorithm (Krahmer et al, 2003), for example, models preferences in terms of costs, where cheaper is more preferred.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>First, the list of preferred attributes can be modeled in terms of the cost function: All type edges should be cheaper than all other edges.</S><S sid = NA ssid = NA>Another advantage of the way the graphbased algorithm models the list of preferred attributes is that finer-grained distinctions can be made than can with the incremental algorithm.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 20 | Reference Article:  J03-1003.txt | Citing Article:  W12-1503.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>In the graph-based algorithm (Krahmer et al, 2003), which we refer to as Graph, information about domain objects is represented as a labelled directed graph, and REG is modeled as a graph-search problem.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>We proposed to model scenes as labeled directed graphs, in which objects are represented as vertices and the properties and relations of these objects are represented as edges.</S><S sid = NA ssid = NA>Graph (i) refers to all vertices of the graph in Figure 3 (every object in the scene is next to some other object), graph (ii) can refer to both d1 and d2, and graph (iii) is distinguishing in that it can refer only to d1.</S> | Discourse Facet:  NA | Annotator: Automatic


