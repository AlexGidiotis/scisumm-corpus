Citance Number: 1 | Reference Article:  C90-3052.txt | Citing Article:  W91-0115.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >As mentioned in (Emele and Zajac, 1990), the proposed approach inevitably leads to the consequence that the data structure becomes slightly complicated.</S> | Reference Offset:  ['0'] | Reference Text:  <S sid = 0 ssid = >Typed Unification Grammars</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 2 | Reference Article:  C90-3052.txt | Citing Article:  P98-2154.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['0'] | Reference Text:  <S sid = 0 ssid = >Typed Unification Grammars</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 3 | Reference Article:  C90-3052.txt | Citing Article:  E95-1025.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Implementations of sorted feature formalisms such as TDL (Krieger and Schifer, 1994), ALE (Carpenter, 1993), CUF (DSrre and Dorna, 1993), TFS (Emele and Zajac, 1990) and others have been used successfully for the development and testing of large grammars and lexicons, but they may be too slow for actual use in applications 180 because they are generally built on top of Prolog or LISP, and can therefore not be as efficient as the built-in unification of Prolog.</S> | Reference Offset:  ['0'] | Reference Text:  <S sid = 0 ssid = >Typed Unification Grammars</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 4 | Reference Article:  C90-3052.txt | Citing Article:  C92-2121.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >A more radical approach however rooted in the traditional model is to fully map the typed unification grammars [Emele and Zajac, 1990 on the SNAP.</S> | Reference Offset:  ['0'] | Reference Text:  <S sid = 0 ssid = >Typed Unification Grammars</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 5 | Reference Article:  C90-3052.txt | Citing Article:  W97-1510.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['0'] | Reference Text:  <S sid = 0 ssid = >Typed Unification Grammars</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 6 | Reference Article:  C90-3052.txt | Citing Article:  W97-1510.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >This gives the possibility to define more general relations, and in particular functions can be defined in a way similar to, for example, (Johnson and Rosner, 1989) and (Emele and Zajac, 1990).</S> | Reference Offset:  ['0'] | Reference Text:  <S sid = 0 ssid = >Typed Unification Grammars</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 7 | Reference Article:  C90-3052.txt | Citing Article:  W97-1510.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In this way the user can create an inheritance hierarchy which is similar but not identical to how inheritance is used in other formalisms uch as TFS (Emele and Zajac, 1990) or ALE (Carpenter, 1992).</S> | Reference Offset:  ['0'] | Reference Text:  <S sid = 0 ssid = >Typed Unification Grammars</S> | Discourse Facet:  NA | Annotator: Automatic


