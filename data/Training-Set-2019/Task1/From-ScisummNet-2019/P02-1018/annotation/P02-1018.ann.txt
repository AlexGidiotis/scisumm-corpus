Citance Number: 1 | Reference Article:  P02-1018.txt | Citing Article:  P03-1055.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>Johnson (2002) proposes an algorithm that is able to find long-distance dependencies, as a post processing step, after parsing.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>This paper describes a simple patternmatching algorithm for post-processing the output of such parsers to add a wide variety of empty nodes to its parse trees.</S><S sid = NA ssid = NA>One of the main motivations for research on parsing is that syntactic structure provides important information for semantic interpretation; hence syntactic parsing is an important first step in a variety of useful tasks.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 2 | Reference Article:  P02-1018.txt | Citing Article:  P03-1055.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>As our interest lies in trace detection and antecedent recovery, we adopt the evaluation measures introduced by Johnson (2002).</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>The standard Parseval precision and recall measures for evaluating parse accuracy do not measure the accuracy of empty node and antecedent recovery, but there is a fairly straightforward extension of them that can evaluate empty node and antecedent recovery, as described in section 3.</S><S sid = NA ssid = NA>The first, which measures the accuracy of empty node recovery but not co-indexation, is just the standard Parseval evaluation applied to empty nodes only, viz., precision and recall and scores derived from these.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 3 | Reference Article:  P02-1018.txt | Citing Article:  P03-1055.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA></S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>Possibly there is a way to use both skeletal and the original kind of patterns in a single system.</S><S sid = NA ssid = NA>The accuracy of transitivity labelling was not systematically evaluated here.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 4 | Reference Article:  P02-1018.txt | Citing Article:  P03-1055.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>In this section, we validate the two-step approach, by applying the parser to the output of the trace tagger, and comparing the antecedent recovery accuracy to Johnson (2002).</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>The standard Parseval precision and recall measures for evaluating parse accuracy do not measure the accuracy of empty node and antecedent recovery, but there is a fairly straightforward extension of them that can evaluate empty node and antecedent recovery, as described in section 3.</S><S sid = NA ssid = NA>This paper also proposes an evaluation procedure for empty node recovery procedures which is independent of most of the details of phrase structure, which makes it possible to compare the performance of empty node recovery on parser output with the empty node annotations in a goldstandard corpus.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 5 | Reference Article:  P02-1018.txt | Citing Article:  P03-1055.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA></S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>Possibly there is a way to use both skeletal and the original kind of patterns in a single system.</S><S sid = NA ssid = NA>The accuracy of transitivity labelling was not systematically evaluated here.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 6 | Reference Article:  P02-1018.txt | Citing Article:  P03-1055.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>Comparing our results to Johnson (2002), we find that the NOINSERT model outperforms that of Johnson by 4.6% (see Table 7).</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>This is not unlikely since the statistical model used by the parser does not model these larger tree fragments.</S><S sid = NA ssid = NA>Table 4 provides these measures for the same two corpora described earlier.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 7 | Reference Article:  P02-1018.txt | Citing Article:  P03-1055.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>Excluding Johnson (2002)'s pattern-matching algorithm, most recent work on finding head - dependencies with statistical parser has used statistical versions of deep grammar formalisms, such as CCG (Clark et al, 2002) or LFG (Riezler et al, 2002).</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>This is not unlikely since the statistical model used by the parser does not model these larger tree fragments.</S><S sid = NA ssid = NA>Evaluating the algorithm on the output of Charniak’s parser (Charniak, 2000) and the Penn treebank (Marcus et al., 1993) shows that the patternmatching algorithm does surprisingly well on the most frequently occuring types of empty nodes given its simplicity.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 8 | Reference Article:  P02-1018.txt | Citing Article:  N06-1024.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>Finally, it is not clear that their numbers are in fact comparable to those of Dienes and Dubey on parsed data because the metrics used are not quite equivalent, particularly for (NP*) s: among other differences, unlike Jijkoun and de Rijke's metric (taken from (Johnson, 2002)), Dienes and Dubey's is sensitive to the string extent of the antecedent node, penalizing them if the parser makes attachment errors involving the antecedent even if the system recovered the long-distance dependency itself correctly.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>Note that this is a particularly stringent evaluation measure for a system including a parser, since it is necessary for the parser to produce a non-empty node of the correct category in the correct location to serve as an antecedent for the empty node.</S><S sid = NA ssid = NA>As a comparison of tables 3 and 4 shows, the pattern-matching algorithm’s biggest weakness is its inability to correctly distinguish co-indexed NP * (i.e., NP PRO) from free (i.e., unindexed) NP *.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 9 | Reference Article:  P02-1018.txt | Citing Article:  D07-1065.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>Johnson (2002) used corpus-induced patterns to insert gaps into both gold standard trees and parser output.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>The first phase of the algorithm extracts the patterns from the trees in the training corpus.</S><S sid = NA ssid = NA>We used sections 2–21 of the Penn Treebank as the training corpus; section 24 was used as the development corpus for experimentation and tuning, while the test corpus (section 23) was used exactly once (to obtain the results in section 3).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 10 | Reference Article:  P02-1018.txt | Citing Article:  D07-1065.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>We compare our algorithm under a variety of conditions to the work of (Johnson, 2002) and (Gabbard et al, 2006).</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>Evaluating the algorithm on the output of Charniak’s parser (Charniak, 2000) and the Penn treebank (Marcus et al., 1993) shows that the patternmatching algorithm does surprisingly well on the most frequently occuring types of empty nodes given its simplicity.</S><S sid = NA ssid = NA>There are modications and variations on this algorithm that are worth exploring in future work.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 11 | Reference Article:  P02-1018.txt | Citing Article:  D07-1065.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>The first metric, which was introduced by Johnson (2002), has been widely reported by researchers investigating gap insertion.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>We used pattern depth as the ranking criterion to produce the results reported below because it ensures that “deep” patterns receive a chance to apply.</S><S sid = NA ssid = NA>Before the trees are used in the training and insertion phases they are passed through a common preproccessing step, which relabels preterminal nodes dominating auxiliary verbs and transitive verbs.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 12 | Reference Article:  P02-1018.txt | Citing Article:  W04-3215.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>Correct dependency recovery for object extraction is also difficult for shallow methods such as Johnson (2002) and Dienes and Dubey (2003).</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>Note that this is a particularly stringent evaluation measure for a system including a parser, since it is necessary for the parser to produce a non-empty node of the correct category in the correct location to serve as an antecedent for the empty node.</S><S sid = NA ssid = NA>Many current linguistic theories of non-local dependencies are extremely complex, and would be difficult to apply with the kind of broad coverage described here.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 13 | Reference Article:  P02-1018.txt | Citing Article:  C04-1157.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>While Charniak's parser does not generate empty category information, Johnson (2002) has developed an algorithm that extracts patterns from the Treebank which can be used to insert empty categories into the parser's output.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>Evaluating the algorithm on the output of Charniak’s parser (Charniak, 2000) and the Penn treebank (Marcus et al., 1993) shows that the patternmatching algorithm does surprisingly well on the most frequently occuring types of empty nodes given its simplicity.</S><S sid = NA ssid = NA>The pattern-matching approach is not tied to any particular linguistic theory, but it does require a treebank training corpus from which the algorithm extracts its patterns.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 14 | Reference Article:  P02-1018.txt | Citing Article:  P04-1042.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>Johnson (2002) was the first post-processing approach to non-local dependency recovery, using a simple pattern-matching algorithm on context-free trees.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>This paper describes a simple patternmatching algorithm for post-processing the output of such parsers to add a wide variety of empty nodes to its parse trees.</S><S sid = NA ssid = NA>A Simple Pattern-Matching Algorithm For Recovering Empty Nodes And Their Antecedents</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 15 | Reference Article:  P02-1018.txt | Citing Article:  P04-1042.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>This approach contrasts with Johnson (2002), who treats empty/antecedent identification as a joint task, and with Dienes and Dubey (2003a, b), who always identify empties first and determine antecedents later.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>A Simple Pattern-Matching Algorithm For Recovering Empty Nodes And Their Antecedents</S><S sid = NA ssid = NA>It can also be regarded as a kind of tree transformation, so the overall system architecture (including the parser) is an instance of the “transform-detransform” approach advocated by Johnson (1998).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 16 | Reference Article:  P02-1018.txt | Citing Article:  P04-1042.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>in an abstract sense it mediates the gap-threading information incorporated into GPSG-style (Gazdar et al., 1985) parsers, and in concrete terms it closely matches the information derived from Johnson (2002)'s connected local tree set patterns.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>If a pattern p matches a tree t, then it is possible to substitute p for the fragment of t that it matches.</S><S sid = NA ssid = NA>Broad coverage syntactic parsers with good performance have recently become available (Charniak, 2000; Collins, 2000), but these typically produce as output a parse tree that only encodes local syntactic information, i.e., a tree that does not include any “empty nodes”.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 17 | Reference Article:  P02-1018.txt | Citing Article:  P04-1042.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>Our algorithm's performance can be compared with the work of Johnson (2002) and Dienes and Dubey (2003a) on WSJ.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>There are modications and variations on this algorithm that are worth exploring in future work.</S><S sid = NA ssid = NA>Inspired by results suggesting that the patternmatching algorithm suffers from over-learning (e.g., testing on the training corpus), we experimented with more abstract “skeletal” patterns, which improved performance on some types of empty nodes but hurt performance on others, leaving overall performance approximately unchanged.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 18 | Reference Article:  P02-1018.txt | Citing Article:  P04-1042.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>For purposes of comparability with Johnson (2002) we used Charniak's 2000 parser as P.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>Evaluating the algorithm on the output of Charniak’s parser (Charniak, 2000) and the Penn treebank (Marcus et al., 1993) shows that the patternmatching algorithm does surprisingly well on the most frequently occuring types of empty nodes given its simplicity.</S><S sid = NA ssid = NA>Broad coverage syntactic parsers with good performance have recently become available (Charniak, 2000; Collins, 2000), but these typically produce as output a parse tree that only encodes local syntactic information, i.e., a tree that does not include any “empty nodes”.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 19 | Reference Article:  P02-1018.txt | Citing Article:  P04-1042.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>P is parser, G is string-to-context-free-gold-tree mapping, A is present remapping algorithm, J is Johnson 2002, D is the COMBINED model of Dienes 2003.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>This is not unlikely since the statistical model used by the parser does not model these larger tree fragments.</S><S sid = NA ssid = NA>(Note that because empty nodes dominate the empty string, their left and right string positions of empty nodes are always identical).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 20 | Reference Article:  P02-1018.txt | Citing Article:  P04-1042.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset:  NA | Citation Text:  <S sid = NA ssid = NA>To further compare the results of our algorithm with previous work, we obtained the output trees produced by Johnson (2002) and Dienes (2003) and evaluated them on typed dependency performance.</S> | Reference Offset:  NA | Reference Text:  <S sid = NA ssid = NA>Perhaps surprisingly, all produced similiar results on the development corpus.</S><S sid = NA ssid = NA>Performance drops considerably when using trees produced by the parser, even though this parser’s precision and recall is around 0.9.</S> | Discourse Facet:  NA | Annotator: Automatic


