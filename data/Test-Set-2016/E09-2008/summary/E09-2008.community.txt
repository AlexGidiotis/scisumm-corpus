<S sid ="3" ssid = "3">Foma is largely compatible with the Xerox/PARC finite-state toolkit.</S>
<S sid ="5" ssid = "5">Foma is a finite-state compiler, programming language, and regular expression/finite-state library designed for multipurpose use with explicit support for automata theoretic research, constructing lexical analyzers for programming languages, and building morphological/phonological analyzers, as well as spellchecking applications.</S>
<S sid ="6" ssid = "6">The compiler allows users to specify finite-state automata and transducers incrementally in a similar fashion to AT&amp;Tâ€™s fsm (Mohri et al., 1997) and Lextools (Sproat, 2003), the Xerox/PARC finite- state toolkit (Beesley and Karttunen, 2003) and the SFST toolkit (Schmid, 2005).</S>
<S sid ="10" ssid = "10">The compiler and library are implemented in C and an API is available.</S>
<S sid ="15" ssid = "15">This makes it straightforward to build spell-checkers from morphological transducers by simply extracting the range of the transduction and matching words approximately.</S>

<S sid ="53" ssid = "1">The Foma project is multipurpose multi-mode finite-state compiler geared toward practical construction of large-scale finite-state machines such as may be needed in natural language processing as well as providing a framework for research in finite-state automata.</S>
<S sid ="54" ssid = "2">Several wide- coverage morphological analyzers specified in the LEXC/xfst format have been compiled successfully with Foma.</S>