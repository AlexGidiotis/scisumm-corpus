Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Offset,Citation Text,Reference Offset,Reference Text,Discourse Facet
1,P11-1060,D11-1039,0.0,0.0,"Clarke et al (2010) and Liang et al (2011) describe approaches for learning semantic parsers from questions paired with database answers, while Goldwasser et al (2011) presents work on unsupervised learning",['132'],"<S sid =""132"" ssid = ""17"">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>",Method_Citation
2,P11-1060,P13-1092,0.0,0.0,"In particular, Clarke et al (2010) and Liang et al (2011) proposed methods to learn from question answer pairs alone, which represents a significant advance",['132'],"<S sid =""132"" ssid = ""17"">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>",Method_Citation
3,P11-1060,P13-1092,0.0,0.0,"To handle syntax-semantics mismatch, GUSP introduces a novel dependency-based meaning representation. Clarke et al (2010) and Liang et al (2011) used the annotated logical forms to compute answers for their experiments",['3'],"<S sid =""3"" ssid = ""3"">In tackling this challenging learning problem, we introduce a new semantic representation which highlights a parallel between dependency syntax and efficient evaluation of logical forms.</S>",Impact_Citation
3,P11-1060,P13-1092,0.0,0.0,"To handle syntax-semantics mismatch, GUSP introduces a novel dependency-based meaning representation. Clarke et al (2010) and Liang et al (2011) used the annotated logical forms to compute answers for their experiments",['9'],"<S sid =""9"" ssid = ""5"">As in Clarke et al. (2010), we obviate the need for annotated logical forms by considering the endto-end problem of mapping questions to answers.</S>",Method_Citation
4,P11-1060,P13-1092,0.0,0.0,"More recently, Liang et al (2011) proposed DCS for dependency-based compositional semantics, which represents a semantic parse as a tree with nodes representing database elements and operations, and edges representing relational joins",['25'],"<S sid =""25"" ssid = ""1"">We first present a basic version (Section 2.1) of dependency-based compositional semantics (DCS), which captures the core idea of using trees to represent formal semantics.</S>",Method_Citation
8,P11-1060,D12-1069,0.0,0.0,"One line of work eliminates the need for an annotated logical form, instead using only the correct answer for a database query (Lianget al 2011) or even a binary correct/incorrect signal (Clarke et al2010)",['9'],"<S sid =""9"" ssid = ""5"">As in Clarke et al. (2010), we obviate the need for annotated logical forms by considering the endto-end problem of mapping questions to answers.</S>",Method_Citation
10,P11-1060,P12-1045,0.0,0.0,Clarke et al (2010) and Liang et al (2011) trained systems on question and answer pairs by automatically finding semantic interpretations of the questions that would generate the correct answers,['2'],"<S sid =""2"" ssid = ""2"">In this paper, we learn to map questions to answers via latent logical forms, which are induced automatically from question-answer pairs.</S>",Method_Citation
10,P11-1060,P12-1045,0.0,0.0,Clarke et al (2010) and Liang et al (2011) trained systems on question and answer pairs by automatically finding semantic interpretations of the questions that would generate the correct answers,['132'],"<S sid =""132"" ssid = ""17"">Results We first compare our system with Clarke et al. (2010) (henceforth, SEMRESP), which also learns a semantic parser from question-answer pairs.</S>",Method_Citation
11,P11-1060,P14-1008,0.0,0.0,"Dependency-based Compositional Semantics (DCS) provides an intuitive way to model semantics of questions, by using simple dependency-like trees (Liang et al, 2011)",['21'],"<S sid =""21"" ssid = ""17"">The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).</S>",Aim_Citation
11,P11-1060,P14-1008,0.0,0.0,"Dependency-based Compositional Semantics (DCS) provides an intuitive way to model semantics of questions, by using simple dependency-like trees (Liang et al, 2011)",['25'],"<S sid =""25"" ssid = ""1"">We first present a basic version (Section 2.1) of dependency-based compositional semantics (DCS), which captures the core idea of using trees to represent formal semantics.</S>",Method_Citation
11,P11-1060,P14-1008,0.0,0.0,"Dependency-based Compositional Semantics (DCS) provides an intuitive way to model semantics of questions, by using simple dependency-like trees (Liang et al, 2011)",['36'],"<S sid =""36"" ssid = ""12"">It is this transparency between syntax and semantics provided by DCS which leads to a simple and streamlined compositional semantics suitable for program induction.</S>",Method_Citation
12,P11-1060,P14-1008,0.0,0.0,"DCS trees has been proposed to represent natural language semantics with a structure similar to dependency trees (Liang et al, 2011) (Figure 1)",['94'],"<S sid =""94"" ssid = ""70"">We now turn to the task of mapping natural language For the example in Figure 4(b), the de- utterances to DCS trees.</S>",Aim_Citation
16,P11-1060,D11-1140,0.0,0.0,"WASP (Wong and Mooney, 2007), UBL (Kwiatkowski et al, 2010) systems and DCS (Liang et al, 2011)",['7'],"<S sid =""7"" ssid = ""3"">Supervised semantic parsers (Zelle and Mooney, 1996; Tang and Mooney, 2001; Ge and Mooney, 2005; Zettlemoyer and Collins, 2005; Kate and Mooney, 2007; Zettlemoyer and Collins, 2007; Wong and Mooney, 2007; Kwiatkowski et al., 2010) rely on manual annotation of logical forms, which is expensive.</S>",Method_Citation
18,P11-1060,D11-1022,0.0,0.0,"DD-ADMM may be useful in other frameworks involving logical constraints, such as the models for compositional semantics presented by Liang et al (2011)",['6'],"<S sid =""6"" ssid = ""2"">Answering these types of complex questions compositionally involves first mapping the questions into logical forms (semantic parsing).</S>",Method_Citation
19,P11-1060,P12-1051,0.0,0.0,"In fact, for any CFG G, it 1See Liang et al (2011) for work in representing lambda calculus expressions with trees",['20'],"<S sid =""20"" ssid = ""16"">At the same time, representations such as FunQL (Kate et al., 2005), which was used in Clarke et al. (2010), are simpler but lack the full expressive power of lambda calculus.</S>",Method_Citation
