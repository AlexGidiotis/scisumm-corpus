Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Marker,Citation Offset,Citation Text,Citation Text Clean,Reference Offset,Reference Text,Discourse Facet
1,P87-1015,P01-1018,0,1987,0,"The approach that Vijay-Shanker et al (1987) and Weir (1988) take, elaborated on by Becker et al (1992), is to identify a very general class of formalisms, which they call linear context free rewriting systems (CFRSs), and define for this class a large space of structural descriptions which serves as a common ground in which the strong generative capacities of these formalisms can be compared","The approach that Vijay-Shanker et al (1987) and Weir (1988) take, elaborated on by Becker et al (1992), is to identify a very general class of formalisms, which they call linear context free rewriting systems (CFRSs), and define for this class a large space of structural descriptions which serves as a common ground in which the strong generative capacities of these formalisms can be compared","'0','134','214','227'","<S sid=""0"" ssid=""1"">CHARACTERIZING STRUCTURAL DESCRIPTIONS PRODUCED BY VARIOUS GRAMMATICAL FORMALISMS*</S><S sid=""134"" ssid=""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S><S sid=""214"" ssid=""20"">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S><S sid=""227"" ssid=""33"">Formalisms such as the restricted indexed grammars (Gazdar, 1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths, but more complex path sets.</S>",'Method_Citation'
2,P87-1015,E09-1055,0,"Vijay-Shanker et al, 1987",0,"Here we use the standard definition of LCFRS (Vijay-Shanker et al, 1987) and only fix our notation; for a more thorough discussion of this formal ism, we refer to the literature. Let G be an LCFRS","Here we use the standard definition of LCFRS (Vijay-Shanker et al, 1987) and only fix our notation; for a more thorough discussion of this formal ism, we refer to the literature. Let G be an LCFRS","'118','183','210','221'","<S sid=""118"" ssid=""3"">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid=""183"" ssid=""68"">We assume that M is in an existential state qA, with integers i1 and i2 representing zi in the (2i — 1)th and 22th work tape, for 1 < i < k. For each rule p : A fp(B, C) such that fp is mapped onto the function fp defined by the following rule. jp((xi,.. • ,rnt), (1ii, • • • • Yn3))= (Zi , • • • , Zk) M breaks xi , zk into substrings xi, , xn, and yi,...,y"" conforming to the definition of fp.</S><S sid=""210"" ssid=""16"">We place certain restrictions on the composition operations of LCFRS's, restrictions that are shared by the composition operations of the constrained grammatical systems that we have considered.</S><S sid=""221"" ssid=""27"">Members of LCFRS whose operations have this property can be translated into the ILFP notation (Rounds, 1985).</S>",'Method_Citation'
3,P87-1015,W07-2214,0,"Vijay-Shanker et al, 1987",0,"There are many (structural) mildly context sensitive grammar formalisms ,e.g .mcfg ,lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987)","There are many (structural) mildly context sensitive grammar formalisms ,e.g .mcfg ,lcfrs, mg, and they have been shown to be equivalent (Vijay-Shanker et al., 1987)","'116','120','177','207'","<S sid=""116"" ssid=""1"">From the discussion so far it is clear that a number of formalisms involve some type of context-free rewriting (they have derivation trees that are local sets).</S><S sid=""120"" ssid=""5"">To be a member of LCFRS a formalism must satisfy two restrictions.</S><S sid=""177"" ssid=""62"">In the next section, we show how an ATM can accept the strings generated by a grammar in a LCFRS formalism in logspace, and hence show that each family can be recognized in polynomial time.</S><S sid=""207"" ssid=""13"">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S>",'Method_Citation'
4,P87-1015,P09-2003,0,NA,0,"They are in particular more powerful than linear context-free rewriting systems (LCFRS) (Vijay-Shanker et al, 1987)","They are in particular more powerful than linear context-free rewriting systems (LCFRS) (Vijay-Shanker et al, 1987)","'92','134','207','227'","<S sid=""92"" ssid=""77"">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid=""134"" ssid=""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S><S sid=""207"" ssid=""13"">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid=""227"" ssid=""33"">Formalisms such as the restricted indexed grammars (Gazdar, 1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths, but more complex path sets.</S>",'Method_Citation'
5,P87-1015,P09-1111,0,"Vijay-Shanker et al, 1987",0,"Following this line, (Vijay-Shanker et al, 1987) have introduced a formalism called linear context-free rewriting systems (LCFRSs) that has received much attention in later years by the community","Following this line, (Vijay-Shanker et al, 1987) have introduced a formalism called linear context-free rewriting systems (LCFRSs) that has received much attention in later years by the community","'123','134','207','214'","<S sid=""123"" ssid=""8"">A second restriction on the formalisms is that choices during the derivation are independent of the context in the derivation.</S><S sid=""134"" ssid=""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S><S sid=""207"" ssid=""13"">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid=""214"" ssid=""20"">LCFRS's share several properties possessed by the class of mildly context-sensitive formalisms discussed by Joshi (1983/85).</S>",'Method_Citation'
6,P87-1015,P09-1111,0,"Vijay-Shanker et al, 1987",0,"We briefly summarize here the terminology and notation that we adopt for LCFRS; for detailed definitions, see (Vijay-Shanker et al, 1987)","We briefly summarize here the terminology and notation that we adopt for LCFRS; for detailed definitions, see (Vijay-Shanker et al, 1987)","'118','120','152'","<S sid=""118"" ssid=""3"">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid=""120"" ssid=""5"">To be a member of LCFRS a formalism must satisfy two restrictions.</S><S sid=""152"" ssid=""37"">As suggested at the end of Section 3, the restrictions that have been specified in the definition of LCFRS's suggest that they can be efficiently recognized.</S>",'Method_Citation'
7,P87-1015,P07-1021,0,"Vijay-Shanker et al, 1987",0,"We write REGD.k/ to refer to the class of regular dependency languages with a gap-degree bounded by k. Linear Context-Free Rewriting Systems Gap-restricted dependency languages are closely related to Linear Context-Free Rewriting Systems (lcfrs) (Vijay-Shanker et al, 1987), a class of formal systems that generalizes several mildly context-sensitive grammar formalisms","Linear Context-Free Rewriting Systems Gap-restricted dependency languages are closely related to Linear Context-Free Rewriting Systems (lcfrs) (Vijay-Shanker et al, 1987), a class of formal systems that generalizes several mildly context-sensitive grammar formalisms","'92','116','134','207'","<S sid=""92"" ssid=""77"">We loosely describe the class of all such systems as Linear Context-Free Rewriting Formalisms.</S><S sid=""116"" ssid=""1"">From the discussion so far it is clear that a number of formalisms involve some type of context-free rewriting (they have derivation trees that are local sets).</S><S sid=""134"" ssid=""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S><S sid=""207"" ssid=""13"">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S>",'Method_Citation'
8,P87-1015,N09-1061,0,"Vijay-Shanker et al, 1987",0,"This observation is in line with empirical studies in the context of dependency parsing, where the need for formalisms with higher fan-out has been observed even in standard, single language texts (Kuhlmann and Nivre, 2006) .In this paper, we present an algorithm that computes optimal decompositions of rules in the formalism of Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al, 1987)","This observation is in line with empirical studies in the context of dependency parsing, where the need for formalisms with higher fan-out has been observed even in standard, single language texts (Kuhlmann and Nivre, 2006). In this paper, we present an algorithm that computes optimal decompositions of rules in the formalism of Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al, 1987)","'109','136','156','210'","<S sid=""109"" ssid=""15"">A geometrical progression of language families defined by Weir (1987) involves tree sets with increasingly complex path sets.</S><S sid=""136"" ssid=""21"">These two restrictions impose the constraint that the result of composing any two structures should be a structure whose ""size"" is the sum of its constituents plus some constant For example, the operation 4, discussed in the case of CFG's (in Section 4.1) adds the constant equal to the sum of the length of the strings VI, un+r• Since we are considering formalisms with arbitrary structures it is difficult to precisely specify all of the restrictions on the composition operations that we believe would appropriately generalize the concatenation operation for the particular structures used by the formalism.</S><S sid=""156"" ssid=""41"">Giving a recognition algorithm for LCFRL's involves describing the substrings of the input that are spanned by the structures derived by the LCFRS's and how the composition operation combines these substrings.</S><S sid=""210"" ssid=""16"">We place certain restrictions on the composition operations of LCFRS's, restrictions that are shared by the composition operations of the constrained grammatical systems that we have considered.</S>",'Method_Citation'
9,P87-1015,N09-1061,0,1987,0,"We briefly summarize the terminology and notation that we adopt for LCFRS; for detailed definitions, see Vijay-Shanker et al (1987)","We briefly summarize the terminology and notation that we adopt for LCFRS; for detailed definitions, see Vijay-Shanker et al (1987)","'118','120','152'","<S sid=""118"" ssid=""3"">In the remainder of the paper, we outline how a class of Linear Context-Free Rewriting Systems (LCFRS's) may be defined and sketch how semilinearity and polynomial recognition of these systems follows.</S><S sid=""120"" ssid=""5"">To be a member of LCFRS a formalism must satisfy two restrictions.</S><S sid=""152"" ssid=""37"">As suggested at the end of Section 3, the restrictions that have been specified in the definition of LCFRS's suggest that they can be efficiently recognized.</S>",'Method_Citation'
10,P87-1015,W10-1407,0,"Vijay-Shanker et al, 1987",0,"LCFRS (Vijay-Shanker et al, 1987) are anatural extension of CFG in which a single nonterminal node can dominate more than one continuous span of terminals","LCFRS (Vijay-Shanker et al, 1987) are a natural extension of CFG in which a single nonterminal node can dominate more than one continuous span of terminals","'41','43','54','100'","<S sid=""41"" ssid=""26"">If 7 is an elementary tree, the derivation tree consists of a single node labeled 7.</S><S sid=""43"" ssid=""28"">The tree denoting this derivation of 7 is rooted with a node labeled 7' having k subtrees for the derivations of 71, ... ,7a.</S><S sid=""54"" ssid=""39"">An IG can be viewed as a CFG in which each nonterminal is associated with a stack.</S><S sid=""100"" ssid=""6"">The tee pumping lemma states that if there is tree, t = 22 t2t3, generated by a CFG G, whose height is more than a predetermined bound k, then all trees of the form ti tP3 for each i > 0 will also generated by G (as shown in Figure 9b).</S>",'Method_Citation'
11,P87-1015,W10-1407,0,"Vijay-Shanker et al, 1987",0,"A LCFRS (Vijay-Shanker et al, 1987) is a tuple G= (N, T, V, P, S )wherea) N is a finite set of non-terminals with a function dim: N? N that determines the fan-out of each A? N; b) T and V are disjoint finite sets of terminals and variables; c) S? N is the start symbol with dim (S)= 1; d) P is a finite set of rewriting rules A (? 1,..","A LCFRS (Vijay-Shanker et al, 1987) is a tuple G= (N, T, V, P, S ) where N is a finite set of non-terminals with a function dim: N? N that determines the fan-out of each A? N; b) T and V are disjoint finite sets of terminals and variables; c) S? N is the start symbol with dim (S)= 1; d) P is a finite set of rewriting rules A (? 1,..","'37','64','128','189'","<S sid=""37"" ssid=""22"">Like CFG's, the choice is predetermined by a finite number of rules encapsulated in the grammar.</S><S sid=""64"" ssid=""49"">Steedman (1986) considers Categorial Grammars in which both the operations of function application and composition may be used, and in which function can specify whether they take their arguments from their right or left.</S><S sid=""128"" ssid=""13"">As in the case of the derivation trees of CFG's, nodes are labeled by a member of some finite set of symbols (perhaps only implicit in the grammar as in TAG's) used to denote derived structures.</S><S sid=""189"" ssid=""74"">For rules p : A fpo such that fp is constant function, giving an elementary structure, fp is defined such that fp() = (Si ... xi() where each z is a constant string.</S>",'Method_Citation'
12,P87-1015,E09-1053,0,1987,0,"In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG; Joshi and Schabes (1997)) and Linear Context-Free Rewrite Systems (LCFRS; Vijay-Shanker et al (1987))","In particular, we cast new light on the relationship between CCG and other mildly context-sensitive formalisms such as Tree-Adjoining Grammar (TAG; Joshi and Schabes (1997)) and Linear Context-Free Rewrite Systems (LCFRS; Vijay-Shanker et al (1987))","'74','116','134','207'","<S sid=""74"" ssid=""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S><S sid=""116"" ssid=""1"">From the discussion so far it is clear that a number of formalisms involve some type of context-free rewriting (they have derivation trees that are local sets).</S><S sid=""134"" ssid=""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S><S sid=""207"" ssid=""13"">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S>",'Method_Citation'
13,P87-1015,E09-1053,0,"Vijay-Shanker et al, 1987",0,"2 By this result, CCG falls in line with context-free grammars, TAG, and LCFRS, whose sets of deriva tional structures are all regular (Vijay-Shanker et al., 1987)","By this result, CCG falls in line with context-free grammars, TAG, and LCFRS, whose sets of derivational structures are all regular (Vijay-Shanker et al., 1987)","'27','64','116','134'","<S sid=""27"" ssid=""12"">Thus, the tree sets generated by HG's are similar to those of CFG's, with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of Tree Adjoining Grammars, a tree rewriting formalism, was introduced by Joshi, Levy and Takahashi (1975) and Joshi (1983/85).</S><S sid=""64"" ssid=""49"">Steedman (1986) considers Categorial Grammars in which both the operations of function application and composition may be used, and in which function can specify whether they take their arguments from their right or left.</S><S sid=""116"" ssid=""1"">From the discussion so far it is clear that a number of formalisms involve some type of context-free rewriting (they have derivation trees that are local sets).</S><S sid=""134"" ssid=""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S>",'Method_Citation'
14,P87-1015,E09-1053,0,"Vijay-Shanker et al, 1987",0,"It is important to note that while CCG derivations themselves can be seen as trees as well, they do not always form regular tree languages (Vijay-Shanker et al, 1987)","It is important to note that while CCG derivations themselves can be seen as trees as well, they do not always form regular tree languages (Vijay-Shanker et al, 1987)","'27','29','48','74'","<S sid=""27"" ssid=""12"">Thus, the tree sets generated by HG's are similar to those of CFG's, with each node annotated by the operation (concatenation or wrapping) used to combine the headed strings derived by the daughters of Tree Adjoining Grammars, a tree rewriting formalism, was introduced by Joshi, Levy and Takahashi (1975) and Joshi (1983/85).</S><S sid=""29"" ssid=""14"">Trees are composed using an operation called adjoining, which is defined as follows.</S><S sid=""48"" ssid=""33"">There has been recent interest in the application of Indexed Grammars (IG's) to natural languages.</S><S sid=""74"" ssid=""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S>",'Method_Citation'
15,P87-1015,N10-1035,0,1987,0,"On this line of investigation, mildly context-sensitive grammar formalisms have been introduced (Joshi,1985), including, among several others, the tree ad joining grammars (TAGs) of Joshi et al (1975) .Linear context-free rewriting system (LCFRS), introduced by Vijay-Shanker et al (1987), is a mildly context-sensitive formalism that allows the derivation of tuples of strings ,i.e., discontinuous phrases","On this line of investigation, mildly context-sensitive grammar formalisms have been introduced (Joshi,1985), including, among several others, the tree ad joining grammars (TAGs) of Joshi et al (1975). Linear context-free rewriting system (LCFRS), introduced by Vijay-Shanker et al (1987), is a mildly context-sensitive formalism that allows the derivation of tuples of strings, i.e., discontinuous phrases","'55','74','134','207'","<S sid=""55"" ssid=""40"">Each production can push or pop symbols on the stack as can be seen in the following productions that generate tree of the form shown in Figure 4b.</S><S sid=""74"" ssid=""59"">An extension of the TAG system was introduced by Joshi et al. (1975) and later redefined by Joshi (1987) in which the adjunction operation is defined on sets of elementary trees rather than single trees.</S><S sid=""134"" ssid=""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S><S sid=""207"" ssid=""13"">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S>",'Method_Citation'
16,P87-1015,P12-1053,0,1987,0,"CFTG are weakly equivalent to the simple macro grammars of Fischer (1968), which are a notational variant of the well-nested linear context-free rewriting systems (LCFRS) of Vijay-Shanker et al (1987) and the well-nested multiple context-free grammars (MCFG) of Seki et al (1991) .3 Thus, CFTG are mildly context-sensitive since their generated string languages are semi-linear and can be parsed in polynomial time (Go ?mez-Rodr? ?guez et al, 2010)","CFTG are weakly equivalent to the simple macro grammars of Fischer (1968), which are a notational variant of the well-nested linear context-free rewriting systems (LCFRS) of Vijay-Shanker et al (1987) and the well-nested multiple context-free grammars (MCFG) of Seki et al (1991)","'134','139','207','227'","<S sid=""134"" ssid=""19"">These systems are similar to those described by Pollard (1984) as Generalized Context-Free Grammars (GCFG's).</S><S sid=""139"" ssid=""24"">Semilinearity and the closely related constant growth property (a consequence of semilinearity) have been discussed in the context of grammars for natural languages by Joshi (1983/85) and Berwick and Weinberg (1984).</S><S sid=""207"" ssid=""13"">We outlined the definition of a family of constrained grammatical formalisms, called Linear Context-Free Rewriting Systems.</S><S sid=""227"" ssid=""33"">Formalisms such as the restricted indexed grammars (Gazdar, 1985) and members of the hierarchy of grammatical systems given by Weir (1987) have independent paths, but more complex path sets.</S>",'Method_Citation'
