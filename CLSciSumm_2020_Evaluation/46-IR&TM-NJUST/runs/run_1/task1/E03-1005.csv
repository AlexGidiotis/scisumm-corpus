Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Marker,Citation Offset,Citation Text,Citation Text Clean,Reference Offset,Reference Text,Discourse Facet
2,E03-1005,N06-1045,0,"Bod, 2003",0,"Data-Oriented Parsing (DOP)? s methodology is to calculate weighted derivations, but as noted in (Bod, 2003), it is the highest ranking parse, not derivation, that is desired","Data-Oriented Parsing (DOP)'s methodology is to calculate weighted derivations, but as noted in (Bod, 2003), it is the highest ranking parse, not derivation, that is desired","'13','19','43','75'","<S sid=""13"" ssid=""10"">The other innovation of DOP was to take (in principle) all corpus fragments, of any size, rather than a small subset.</S><S sid=""19"" ssid=""16"">And Collins (2000) argues for ""keeping track of counts of arbitrary fragments within parse trees"", which has indeed been carried out in Collins and Duffy (2002) who use exactly the same set of (all) tree fragments as proposed in Bod (1992).</S><S sid=""43"" ssid=""40"">Bod (2001, 2003).</S><S sid=""75"" ssid=""27"">This means that summing up over derivations of a tree in DOP yields the same probability as summing over all the isomorphic derivations in the PCFG.</S>",'Method_Citation'
3,E03-1005,D07-1058,0,2003,0,"Goodman? s transform, in com bi nation with a range of heuristics, allowed Bod (2003) to run the DOP model on the Penn Treebank WSJ benchmark and obtain some of the best results obtained with a generative model","Goodman's transform, in combination with a range of heuristics, allowed Bod (2003) to run the DOP model on the Penn Treebank WSJ benchmark and obtain some of the best results obtained with a generative model","'4','32','99','146'","<S sid=""4"" ssid=""1"">The distinctive feature of the DOP approach when it was proposed in 1992 was to model sentence structures on the basis of previously observed frequencies of sentence structure fragments, without imposing any constraints on the size of these fragments.</S><S sid=""32"" ssid=""29"">However, ML-DOP suffers from overlearning if the subtrees are trained on the same treebank trees as they are derived from.</S><S sid=""99"" ssid=""2"">We will refer to these models as Likelihood-DOP models, but in this paper we will specifically mean by ""Likelihood-DOP"" the PCFG-reduction of Bod (2001) given in Section 2.2.</S><S sid=""146"" ssid=""11"">This paper also re-affirmed that the coarsegrained approach of using all subtrees from a treebank outperforms the fine-grained approach of specifically modeling lexical-syntactic depen dencies (as e.g. in Collins 1999 and Charniak 2000).</S>",'Method_Citation'
4,E03-1005,D07-1058,0,"Bod, 2003",0,"Zuidema (2006a) shows that also the estimator (Bod, 2003) uses is biased and inconsistent, and will, even in the limit of infinite data, not correctly identify many possible distributions over trees","Zuidema (2006a) shows that also the estimator (Bod, 2003) uses is biased and inconsistent, and will, even in the limit of infinite data, not correctly identify many possible distributions over trees","'37','39','43','94'","<S sid=""37"" ssid=""34"">Bod (2001) used an alternative technique which samples a fixed number of subtrees of each depth and which has the effect of assigning roughly equal weight to each node in the training data.</S><S sid=""39"" ssid=""36"">Collins & Duffy (2002) showed how the perceptron algorithm can be used to efficiently compute the best parse with DOP1's subtrees, reporting a 5.1% relative reduction in error rate over the model in Collins (1999) on the WSJ.</S><S sid=""43"" ssid=""40"">Bod (2001, 2003).</S><S sid=""94"" ssid=""46"">This paper presents the first published results with this estimator on the WSJ.</S>",'Method_Citation'
5,E03-1005,P11-1086,0,"Bod, 2003",0,"Second, we compare against a composed-rule system, which is analogous to the Data Oriented Parsing (DOP) approach in parsing (Bod, 2003)","Second, we compare against a composed-rule system, which is analogous to the Data Oriented Parsing (DOP) approach in parsing (Bod, 2003)","'4','11','51','85'","<S sid=""4"" ssid=""1"">The distinctive feature of the DOP approach when it was proposed in 1992 was to model sentence structures on the basis of previously observed frequencies of sentence structure fragments, without imposing any constraints on the size of these fragments.</S><S sid=""11"" ssid=""8"">The DOP model, on the other hand, was the first model (to the best of our knowledge) that proposed not to train a predefined grammar on a corpus, but to directly use corpus fragments as a grammar.</S><S sid=""51"" ssid=""3"">That is, the probability of a subtree t is taken as the number of occurrences of t in the training set, I t I, divided by the total number of occurrences of all subtrees t' with the same root label as t. Let r(t) return the root label of t: The probability of a derivation ti0...0tn is computed by the product of the probabilities of its subtrees ti: = HP (t1) An important feature of DOP1 is that there may be several derivations that generate the same parse tree.</S><S sid=""85"" ssid=""37"">For example, Bod (2001) samples a fixed number of subtrees of each depth, which has the effect of assigning roughly equal weight to each node in the training data, and roughly exponentially less probability for larger trees (see Goodman 2002: 12).</S>",'Method_Citation'
6,E03-1005,P04-1013,0,"Bod, 2003",0,"Our best performing model is more accurate than all these previous models except (Bod, 2003)","Our best performing model is more accurate than all these previous models except (Bod, 2003)","'1','3','7','99'","<S sid=""1"" ssid=""1"">Two apparently opposing DOP models exist in the literature: one which computes the parse tree involving the most frequent subtrees from a treebank and one which computes the parse tree involving the fewest subtrees from a treebank.</S><S sid=""3"" ssid=""3"">Together with a PCFGreduction of DOP we obtain improved accuracy and efficiency on the Wall Street Journal treebank Our results show an 11% relative reduction in error rate over previous models, and an average processing time of 3.6 seconds per WSJ sentence.</S><S sid=""7"" ssid=""4"">Other models started off with a predefined grammar and used a corpus only for estimating the rule probabilities (as e.g.</S><S sid=""99"" ssid=""2"">We will refer to these models as Likelihood-DOP models, but in this paper we will specifically mean by ""Likelihood-DOP"" the PCFG-reduction of Bod (2001) given in Section 2.2.</S>",'Method_Citation'
7,E03-1005,P04-1013,0,"Bod, 2003",0,"We find that the discriminative probability model is much worse than the generative one, but that training to optimize the discriminative criteria results in improved performance. Performance of the latter model on the standard test set achieves 90.1% F-measure on constituents, which is the second best current ac curacy level, and only 0.6% below the current best (Bod, 2003) .This paper has also proposed a neural network training method which optimizes a discriminative criteria even when the parameters being estimated are those of a generative probability model","Performance of the latter model on the standard test set achieves 90.1% F-measure on constituents, which is the second best current accuracy level, and only 0.6% below the current best (Bod, 2003)","'38','86','131','134'","<S sid=""38"" ssid=""35"">Although Bod's method obtains very competitive results on the Wall Street Journal (WSJ) task, the parsing time was reported to be over 200 seconds per sentence (Bod 2003).</S><S sid=""86"" ssid=""38"">Bod reports state-of-the-art results with this method, and observes no decrease in parse accuracy when larger subtrees are included (using subtrees up to depth 14).</S><S sid=""131"" ssid=""12"">As to the processing time, the PCFG reduction parses each sentence 100 words) in 3.6 seconds average, while the parser in Bod (2001, 2003), which uses over 5 million subtrees, is reported to take about 220 seconds per sentence.</S><S sid=""134"" ssid=""15"">This may be explained by the fact our best results in Bod (2001) were obtained by testing various subtree restrictions until the highest accuracy was obtained, while in the current experiment we used all subtrees as given by the PCFG-reduction.</S>",'Result_Citation'
10,E03-1005,E06-2025,0,"Bod, 2003",0,"Similarly, (Bod, 2003) changes the way frequenciesfi are counted, with a similar effect","Similarly, (Bod, 2003) changes the way frequencies fi are counted, with a similar effect",'22',"<S sid=""22"" ssid=""19"">DOP1 combines subtrees from a treebank by means of node-substitution and computes the probability of a tree from the normalized frequencies of the subtrees (see Section 2 for a full definition).</S>",'Method_Citation'
12,E03-1005,W06-2905,0,"Bod, 2003",0,"(henceforth, STSGs), which can represent single words, contiguous and noncontiguous MWEs, context-free rules or complete parse trees in a unified representation. My approach is closely related to work in statistical parsing known as Data-Oriented Parsing (DOP), an empirically highly successful approach with labeled recall and precision scores on the Penn Tree Bank that are among the best currently obtained (Bod, 2003)","My approach is closely related to work in statistical parsing known as Data-Oriented Parsing (DOP), an empirically highly successful approach with labeled recall and precision scores on the Penn Tree Bank that are among the best currently obtained (Bod, 2003)","'43','82','100','108'","<S sid=""43"" ssid=""40"">Bod (2001, 2003).</S><S sid=""82"" ssid=""34"">Bonnema et al. (1999) show that as a consequence too much weight is given to larger subtrees, and that the parse accuracy of DOP1 deteriorates if (very) large subtrees are included.</S><S sid=""100"" ssid=""3"">In Bod (2000b), an alternative notion for the best parse tree was proposed based on a simplicity criterion: instead of producing the most probable tree, this model produced the tree generated by the shortest derivation with the fewest training subtrees.</S><S sid=""108"" ssid=""11"">The underlying idea of combining LikelihoodDOP and Simplicity-DOP is that the parser selects the simplest tree from among the n most probable trees, where n is a free parameter.</S>",'Method_Citation'
13,E03-1005,W06-2905,0,"Bod, 2003",0,"Shown are results were only elementary trees with scores higher than 0.3 and 0.1 respectively are used. However, more interesting is a qualitative analysis of the STSG induced, which shows that ,un like DOP1, push-n-pull arrives at a grammar that gives high weights (and scores) to those elementary3We approximated the most probable parse as follows (fol lowing (Bod, 2003))","We approximated the most probable parse as follows (following (Bod, 2003))","'1','19','43','50'","<S sid=""1"" ssid=""1"">Two apparently opposing DOP models exist in the literature: one which computes the parse tree involving the most frequent subtrees from a treebank and one which computes the parse tree involving the fewest subtrees from a treebank.</S><S sid=""19"" ssid=""16"">And Collins (2000) argues for ""keeping track of counts of arbitrary fragments within parse trees"", which has indeed been carried out in Collins and Duffy (2002) who use exactly the same set of (all) tree fragments as proposed in Bod (1992).</S><S sid=""43"" ssid=""40"">Bod (2001, 2003).</S><S sid=""50"" ssid=""2"">The probability of a parse tree is computed from the occurrencefrequencies of the subtrees in the treebank.</S>",'Method_Citation'
14,E03-1005,P05-1022,0,"Bod, 2003",0,"This result is only slightly higher than the highest reported result for this test-set, Bod? s (.907) (Bod,2003)","This result is only slightly higher than the highest reported result for this test-set, Bod's (.907) (Bod,2003)","'39','79','131','137'","<S sid=""39"" ssid=""36"">Collins & Duffy (2002) showed how the perceptron algorithm can be used to efficiently compute the best parse with DOP1's subtrees, reporting a 5.1% relative reduction in error rate over the model in Collins (1999) on the WSJ.</S><S sid=""79"" ssid=""31"">While Bod (2001) needed to use a very large sample from the WSJ subtrees to do this, Goodman's method can do the same job with a more compact grammar.</S><S sid=""131"" ssid=""12"">As to the processing time, the PCFG reduction parses each sentence 100 words) in 3.6 seconds average, while the parser in Bod (2001, 2003), which uses over 5 million subtrees, is reported to take about 220 seconds per sentence.</S><S sid=""137"" ssid=""2"">Recall that for n=1, SL-DOP is equal to the PCFG-reduction of Bod (2001) (which we also called Likelihood-DOP) while LS-DOP is equal to Simplicity-DOP.</S>",'Method_Citation'
16,E03-1005,P07-1051,0,2003,0,"This assumption is in consonance with the principle of simplicity, but there are also empirical reasons for the shortest derivation assumption: in Bod (2003) and Hearne and Way (2006), it is shown that DOP models that select the preferred parse of a test sentence using the shortest derivation criterion perform very well","This assumption is in consonance with the principle of simplicity, but there are also empirical reasons for the shortest derivation assumption: in Bod (2003) and Hearne and Way (2006), it is shown that DOP models that select the preferred parse of a test sentence using the shortest derivation criterion perform very well","'43','85','97','102'","<S sid=""43"" ssid=""40"">Bod (2001, 2003).</S><S sid=""85"" ssid=""37"">For example, Bod (2001) samples a fixed number of subtrees of each depth, which has the effect of assigning roughly equal weight to each node in the training data, and roughly exponentially less probability for larger trees (see Goodman 2002: 12).</S><S sid=""97"" ssid=""49"">In this paper, we will estimate the most probable parse by computing the 10,000 most probable derivations by means of Viterbi n-best, from which the most likely parse is estimated by summing up the probabilities of the derivations that generate the same parse.</S><S sid=""102"" ssid=""5"">In case the shortest derivation is not unique, Bod (2000b) proposes to back off to a frequency ordering of the subtrees.</S>",'Method_Citation'
17,E03-1005,P07-1051,0,"Bod, 2003",0,"But equally important is the fact that this new DOP* model does not suffer from a decrease in parse accuracy if larger subtrees are included, whereas the original DOP model needs to be redressed by a correction factor to maintain this property (Bod 2003)","But equally important is the fact that this new DOP* model does not suffer from a decrease in parse accuracy if larger subtrees are included, whereas the original DOP model needs to be redressed by a correction factor to maintain this property (Bod 2003)","'43','63','99','130'","<S sid=""43"" ssid=""40"">Bod (2001, 2003).</S><S sid=""63"" ssid=""15"">Goodman (1996, 2002) further illustrates this by a node A @j of the following form: To see how many subtrees it has, Goodman first considers the possibilities of the left branch.</S><S sid=""99"" ssid=""2"">We will refer to these models as Likelihood-DOP models, but in this paper we will specifically mean by ""Likelihood-DOP"" the PCFG-reduction of Bod (2001) given in Section 2.2.</S><S sid=""130"" ssid=""11"">While the PCFG reduction of Bod (2001) obtains state-of-the-art results on the WSJ, comparable to Charniak (2000), Bonnema et al. 's estimator performs worse and is comparable to Collins (1996).</S>",'Method_Citation'
18,E03-1005,P07-1051,0,2003,0,"Of course, it is well-known that a supervised parser? s f-score decreases if it is transferred to another domain: for example, the (non-binarized) WSJ-trained DOP model in Bod (2003) decreases from around 91% to 85.5% f score if tested on the Brown corpus","Of course, it is well-known that a supervised parser's f-score decreases if it is transferred to another domain: for example, the (non-binarized) WSJ-trained DOP model in Bod (2003) decreases from around 91% to 85.5% f score if tested on the Brown corpus","'3','7','48','87'","<S sid=""3"" ssid=""3"">Together with a PCFGreduction of DOP we obtain improved accuracy and efficiency on the Wall Street Journal treebank Our results show an 11% relative reduction in error rate over previous models, and an average processing time of 3.6 seconds per WSJ sentence.</S><S sid=""7"" ssid=""4"">Other models started off with a predefined grammar and used a corpus only for estimating the rule probabilities (as e.g.</S><S sid=""48"" ssid=""45"">Compared to Bod (2001), our results show an 11% improvement in terms of relative error reduction and a speedup which reduces the processing time from 220 to 3.6 seconds per WSJ sentence.</S><S sid=""87"" ssid=""39"">Yet, his grammar contains more than 5 million subtrees and processing times of over 200 seconds per WSJ sentence are reported (Bod 2003).</S>",'Result_Citation'
19,E03-1005,W04-0305,0,"Bod, 2003",0,"A moderately larger vocabulary version (4215 tag-word pairs) of this parser achieves 89.8% F-measure on section 0, where the best current result on the testing set is 90.7% (Bod, 2003)","A moderately larger vocabulary version (4215 tag-word pairs) of this parser achieves 89.8% F-measure on section 0, where the best current result on the testing set is 90.7% (Bod, 2003)","'43','79','131','133'","<S sid=""43"" ssid=""40"">Bod (2001, 2003).</S><S sid=""79"" ssid=""31"">While Bod (2001) needed to use a very large sample from the WSJ subtrees to do this, Goodman's method can do the same job with a more compact grammar.</S><S sid=""131"" ssid=""12"">As to the processing time, the PCFG reduction parses each sentence 100 words) in 3.6 seconds average, while the parser in Bod (2001, 2003), which uses over 5 million subtrees, is reported to take about 220 seconds per sentence.</S><S sid=""133"" ssid=""14"">It should be mentioned that the best precision and recall scores reported in Bod (2001) are slightly better than the ones reported here (the difference is only 0.2% for sentences 100 words).</S>",'Result_Citation'
20,E03-1005,P06-1109,0,2003,0,The probability of a parse tree T is the sum of the 1 This subtree probability is redressed by a simple correction factor discussed in Goodman (2003: 136) and Bod (2003),This subtree probability is redressed by a simple correction factor discussed in Goodman (2003: 136) and Bod (2003),"'18','37','40','43'","<S sid=""18"" ssid=""15"">Collins 1999; Charniak 2000; Goodman 1998).</S><S sid=""37"" ssid=""34"">Bod (2001) used an alternative technique which samples a fixed number of subtrees of each depth and which has the effect of assigning roughly equal weight to each node in the training data.</S><S sid=""40"" ssid=""37"">Goodman (2002) furthermore showed how Bonnema et al. 's (1999) and Bod's (2001) estimators can be incorporated in his PCFGreduction, but did not report any experiments with these reductions.</S><S sid=""43"" ssid=""40"">Bod (2001, 2003).</S>",'Method_Citation'
