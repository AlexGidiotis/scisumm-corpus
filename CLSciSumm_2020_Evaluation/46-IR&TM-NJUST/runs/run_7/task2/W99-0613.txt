The approach gains leverage from natural redundancy in the data: for many named-entity instances both the spelling of the name and the context in which it appears are sufficient to determine its type.It's not clear how to apply these methods in the unsupervised case, as they required cross-validation techniques: for this reason we use the simpler smoothing method shown here. input to the unsupervised algorithm is an initial, "seed" set of rules.Our derivation is slightly different from the one presented in (Schapire and Singer 98) as we restrict at to be positive.In addition to a heuristic based on decision list learning, we also presented a boosting-like framework that builds on ideas from (Blum and Mitchell 98).We then discuss how we adapt and generalize a boosting algorithm, AdaBoost, to the problem of named entity classification.This paper discusses the use of unlabeled examples for the problem of named entity classification.This paper discusses the use of unlabeled examples for the problem of named entity classification.The two new terms force the two classifiers to agree, as much as possible, on the unlabeled examples.Future work should also extend the approach to build a complete named entity extractor - a method that pulls proper names from text and then classifies them.In this work we extended the AdaBoost.MH (Schapire and Singer 98) algorithm to the cotraining case.This section describes AdaBoost, which is the basis for the CoBoost algorithm.